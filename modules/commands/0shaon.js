const axios = require("axios");
const fs = require("fs");
const request = require("request");
const moment = require('moment-timezone');
const link = [
  "https://i.imgur.com/SSkDKpQ.mp4"
];

module.exports.config = {
  name: "‚ò∫Ô∏è",
  version: "1.0.0",
  hasPermission: 2,
  credits: "Shaon Ahmed",
  usePrefix: true,
  description: "when send ,‚ò∫Ô∏è then response",
  commandCategory: "no prefix",
  usages: "‚ò∫Ô∏è",
  cooldowns: 1,
};
module.exports.handleEvent = async ({ api, event, Threads }) => {
    var time = moment.tz("Asia/Dhaka").format("LLLL");
  if (event.body.startsWith("‚ò∫Ô∏è")) {
    const shaon = `‚Ä¢‚Äî¬ª‚ú®[ ùêèùê´ùêûùêüùê¢ùê± ùêÑùêØùêûùêßùê≠ ]‚ú®¬´‚Äî‚Ä¢\n‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ïê‚ùÅüå∫‚ùÅ‚ïê‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢\n\n  __‡¶Æ‡¶®‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∑‡ßü ‡¶ü‡¶æ ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π ‡¶õ‡¶æ‡ßú‡¶æ ‡¶ï‡ßá‡¶ì ‡¶ú‡¶æ‡¶®‡ßá ‡¶®‡¶æ‡¶π -!!‚ò∫Ô∏è\n\n‚Ä¢‚îÑ‚îÖ‚ïê‚ïê‚ïê‚ïê‚ùÅüå∫‚ùÅ‚ïê‚ïê‚ïê‚ïê‚îÖ‚îÑ‚Ä¢\n‚Ä¢‚Äî¬ª‚ú®[ ùêíùê°ùêöùê®ùêß ùêèùê´ùê®ùê£ùêûùêúùê≠ ]‚ú®¬´‚Äî‚Ä¢\n[üê∞]  ùó£ùóøùó≤ùó≥ùó∂ùòÖ : [ ${PREFIX} ]\n[ü´∞] ùêçùêéùêèùêëùêÑùêÖùêàùêó  : ‚ò∫Ô∏è\n[‚åõ]  ùêÉùêöùê≠ùêû  : \n[üçí]  ${global.config.BOTNAME}` //const shaon2 = shaon[Math.floor(Math.random() * shaon.length)];

    const callback = () => api.sendMessage({
      body: `${shaon}`,
      attachment: fs.createReadStream(__dirname + "/cache/2025.mp4")
    }, event.threadID, () => fs.unlinkSync(__dirname + "/cache/2025.mp4"), event.messageID);
    
    const requestStream = request(encodeURI(link[Math.floor(Math.random() * link.length)]));
    requestStream.pipe(fs.createWriteStream(__dirname + "/cache/2025.mp4")).on("close", () => callback());
    return requestStream;
  }
};

module.exports.languages = {
  "vi": {
    "on": "D√πng sai c√°ch r·ªìi l√™u l√™u",
    "off": "sv ngu, ƒë√£ b√£o d√πng sai c√°ch",
    "successText": `üß†`,
  },
  "en": {
    "on": "on",
    "off": "off",
    "successText": "success!",
  }
};

module.exports.run = async ({ api, event, Threads, getText }) => {
  const { threadID, messageID } = event;
  let data = (await Threads.getData(threadID)).data;
  if (typeof data["‚ò∫Ô∏è"] === "undefined" || data["‚ò∫Ô∏è"]) data["‚ò∫Ô∏è"] = false;
  else data["‚ò∫Ô∏è"] = true;
  await Threads.setData(threadID, { data });
  global.data.threadData.set(threadID, data);
  api.sendMessage(`${(data["‚ò∫Ô∏è"]) ? getText("off") : getText("on")} ${getText("successText")}`, threadID, messageID);
};
